#!/bin/bash
#
# atomfeed-console         start/stop/status script
#
# chkconfig:  2345 64 36
# description: Console service for atomfeeds
# processname: atomfeed-console
# config: /etc/atomfeed-console

ATOMFEED_CONSOLE_USER='atomfeed-console'

atomfeedConsole_pid() {
    echo `ps -fe | grep 'atomfeed-console-1.0-SNAPSHOT.jar' | grep -v grep | tr -s " "|cut -d" " -f2`
}

start(){
    pid=$(atomfeedConsole_pid)
    if [ -n "$pid" ]
    then
        echo -e "\e[00;31mService atomfeed-console is already running (pid: $pid)\e[00m"
    else
        /bin/su -s /bin/bash ${ATOMFEED_CONSOLE_USER} /opt/atomfeed-console/bin/start.sh
        echo -e "\e[00;32mStarting atomfeed-console\e[00m"
    fi
    return 0
}

debug() {
    pid=$(atomfeedConsole_pid)
    if [ -n "$pid" ]
    then
        echo -e "\e[00;31mService atomfeed-console is already running (pid: $pid)\e[00m"
    else
        /bin/su -s /bin/bash ${ATOMFEED_CONSOLE_USER} /opt/atomfeed-console/bin/debug.sh
        echo -e "\e[00;32mStarting atomfeed-console\e[00m"
    fi
    return 0
}
status() {
    pid=$(atomfeedConsole_pid)
    if [ -n "$pid" ];
    then
        echo -e "\e[00;32matomfeed-console is running with pid: $pid\e[00m"
    exit 0
    else
        echo -e "\e[00;31matomfeed-console is not running\e[00m"
    exit 3
    fi
}

stop() {
    echo -e "\e[00;31mTerminating atomfeed-console\e[00m"
    kill -9 $(atomfeedConsole_pid)
    return
}

case "$1" in
    start)
        start
    ;;
    stop)
      stop
    ;;
    debug)
      debug
    ;;
    restart)
      stop
      start
    ;;
    status)
        status
    ;;
    kill)
        stop
    ;;
esac
